{
     "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
     "contentVersion": "1.0.0.0",
     "parameters": {
          "baseUrl": {
               "type": "string",
               "defaultValue": "https://raw.githubusercontent.com/edwoodjrjr/f5-azure-waf-tier2/develop/payg",
               "metadata": {
                    "description": "The base URL for marketplace deployment.",
                    "artifactsBaseUrl": ""
               }
          },
          "location": {
               "type":"string",
               "metadata": {
                    "description": "The location of the deployment"
               }
          },
          "solutionDeploymentName": {
               "type": "string",
               "metadata": {
                    "description": "A unique name for this deployment."
               }
          },
          "numberOfInstances": {
               "type": "int",
               "defaultValue": 1,
               "allowedValues": [ 1, 2 ],
               "metadata": {
                    "description": "The number of Web Application Firewalls that will be deployed in front of your application."
               }
          },
          "licensedBandwidth": {
               "type": "string",
               "defaultValue": "200mbps",
               "allowedValues": [ 
                    "1gbps",
                    "200mbps",
                    "25mbps"
               ],
               "metadata": {
                    "description": "The VM image to use for this deployment."
               }
          },
          "instanceType": {
               "type": "string",
               "defaultValue": "Standard_D3",
               "metadata": {
                    "description": "The size of the Virtual Hardware Instance."
               },
               "allowedValues": [
                    "Standard_A3",
                    "Standard_A4",
                    "Standard_A5",
                    "Standard_A6",
                    "Standard_A7",
                    "Standard_D2",
                    "Standard_D3",
                    "Standard_D4",
                    "Standard_D11",
                    "Standard_D12",
                    "Standard_D13",
                    "Standard_D14",
                    "Standard_D2_v2",
                    "Standard_D3_v2",
                    "Standard_D4_v2",
                    "Standard_D5_v2",
                    "Standard_D11_v2",
                    "Standard_D12_v2",
                    "Standard_D13_v2",
                    "Standard_D14_v2",
                    "Standard_F2",
                    "Standard_F4"
               ]
          },
          "adminUsername": {
               "type": "string",
               "defaultValue": "azureuser",
               "metadata": {
                    "description": "User name to login to the Web Application Firewall."
               }
          },
          "adminPassword": {
               "type": "securestring",
               "metadata": {
                    "description": "Password to login to the Web Application Firewall."
               }
          },
          "publicIpName": {
               "type": "string",
               "defaultValue": "ip01",
               "metadata": {
                    "description": "Unique name for the Public IP used to access the Web Application Firewalls for management."
               }
          },
          "dnsLabel": {
               "type": "string",
               "defaultValue": "dnslabel",
               "metadata": {
                    "description": "Unique DNS name for the Public IP used to access the Web Application Firewalls for management."
               }
          },
          "applicationProtocols": {
               "type": "string",
               "defaultValue": "http-https",
               "metadata": {
                    "description": "The protocol(s) used by your application."
               },
               "allowedValues" : [
                    "http",
                    "https",
                    "http-https",
                    "https-offload"
               ]
          },
          "applicationAddress": {
               "type": "string",
               "metadata": {
                    "description": "The public IP address or DNS FQDN of the application that this WAF will protect."
               }
          },
          "applicationServiceFqdn": {
               "type": "string",
               "defaultValue": "NOT_SPECIFIED",
               "metadata": {
                    "description": "If deploying in front of an Azure App Service, the FQDN of the public application."
               }
          },
          "applicationPort": {
               "type": "string",
               "defaultValue": "80",
               "metadata": {
                    "description": "If deploying an HTTP application, the port on which your service listens for unencrypted traffic. This field is not required when deploying https only."
               }
          },
          "applicationSecurePort": {
               "type": "string",
               "defaultValue": "443",
               "metadata": {
                    "description": "If deploying an HTTPS application, the port on which your service listens for encrypted traffic. This field is not required when deploying http only."
               }
          },
          "sslCert": {
               "type": "string",
               "defaultValue": "NOT_SPECIFIED",
               "metadata": {
                    "description": "The SSL certificate .pfx file corresponding to public facing VIP."
               }
          },
          "sslPswd": {
               "type": "securestring",
               "defaultValue": "NOT_SPECIFIED",
               "metadata": {
                    "description": "The SSL certificate .pfx file corresponding to public facing VIP."
               }
          },
          "applicationType": {
               "type": "string",
               "defaultValue": "apache",
               "metadata": {
                    "description": "Is your application running on a Linux OS or a Windows OS?"
               },     
               "allowedValues": [
                    "apache",
                    "iis",
                    "nginx",
                    "magento",
                    "woo",
                    "big",
                    "volusion",
                    "miva",
                    "shopify",
                    "demandware",
                    "os",
                    "shop",
                    "wordpress",
                    "drupal",
                    "joomla",
                    "blogger",
                    "vbulletin",
                    "expression",
                    "dnn",
                    "adobecq",
                    "ektron",
                    "sharepoint",
                    "cms"
               ]
          },
          "blockingLevel": {
               "type": "string",
               "defaultValue": "medium",
               "metadata": {
                    "description": "Please select how aggressive you would like the blocking level of this WAF to be.  Remember that the more aggressive the blocking level, the more potential there is for false-positives that the WAF might detect. Select Custom to specify your own security policy below."
               },    
               "allowedValues": [
                    "low",
                    "medium",
                    "high",
                    "off",
                    "custom"
               ]
          },
          "customPolicy": {
               "type": "string",
               "defaultValue": "NOT_SPECIFIED",
               "metadata": {
                    "description": "Specify the publicly available URL of a custom ASM security policy in XML format. This policy will be applied in place of the standard High/Medium/Low policy as indicated above."
               }
          },
          "restrictedSrcAddress": {
               "type": "string",
               "defaultValue": "*",
               "metadata": {
                    "description": "Restricts management access to a specific network or address. Enter a IP address or address range in CIDR notation, or asterisk for all sources."
               }
          }
     },
     "variables": {
          "apiVersionCompute": "2016-03-30",
		"apiVersionNetwork": "2015-06-15",
		"apiVersionStorage": "2015-06-15",
		"apiVersionTemplate": "2015-01-01",
          "imageName": "[concat('f5-waf-solution-', parameters('licensedBandwidth'),'-hourly')]",
          "bigipTemplateLink": "[concat(parameters('baseUrl'), '/deployBigip', parameters('numberOfInstances'), '.json')]",
          "virtualNetworkName": "[concat(parameters('dnsLabel'),'-vnet1')]",
          "vnetAddressPrefix": "10.10.0.0/16",
          "subnetName": "[concat(parameters('dnsLabel'),'-subnet1')]",
          "subnetPrefix": "10.10.1.0/24",
          "ipAddress": "10.10.1.",
          "nicNamePrefix": "[concat(parameters('dnsLabel'),'-nic')]",
          "loadBalancerName": "[concat(parameters('dnsLabel'),'-lb')]",
          "availabilitySetName": "[concat(parameters('dnsLabel'),'-as')]",
          "newStorageAccountName": "[concat(uniquestring(concat(resourceGroup().id, 'st')), 'st')]",
          "diagStorageAccountName": "[concat(uniquestring(concat(resourceGroup().id, 'diag')), 'diag')]",
          "wafNamePrefix": "[concat(parameters('dnsLabel'),'-waf')]",
          "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(parameters('dnsLabel'),'-nsg'))]",
          "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
          "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
          "guiMgtID": "[concat(variables('lbID'),'/inboundNatRules/guimgt')]",
          "sshMgtID": "[concat(variables('lbID'),'/inboundNatRules/sshmgt')]",
          "publicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpName'))]",
          "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
          "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
          "appTypeMap": {
               "iis": {
                    "type": "windows"
               },
               "apache": {
                    "type": "linux"
               },
               "nginx": {
                    "type": "linux"
               },
               "magento": {
                    "type": "linux"
               },
               "woo": {
                    "type": "linux"
               },
               "big": {
                    "type": "linux"
               },
               "volusion": {
                    "type": "linux"
               },
               "miva": {
                    "type": "linux"
               },
               "shopify": {
                    "type": "linux"
               },
               "demandware": {
                    "type": "linux"
               },
               "os": {
                    "type": "linux"
               },
               "shop": {
                    "type": "linux"
               },
               "wordpress": {
                    "type": "linux"
               },
               "drupal": {
                    "type": "linux"
               },
               "joomla": {
                    "type": "linux"
               },
               "blogger": {
                    "type": "linux"
               },
               "vbulletin": {
                    "type": "linux"
               },
               "expression": {
                    "type": "linux"
               },
               "dnn": {
                    "type": "linux"
               },
               "adobecq": {
                    "type": "linux"
               },
               "ektron": {
                    "type": "linux"
               },
               "sharepoint": {
                    "type": "windows"
               },
               "cms": {
                    "type": "linux"
               }
          },
          "appType": "[variables('appTypeMap')[parameters('applicationType')].type]",
          "instanceTypeMap": {
               "Standard_A3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A5": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A6": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_A7": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D11": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D12": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D13": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D14": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D2_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D3_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D4_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D5_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D11_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D12_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D13_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_D14_v2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_F2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_F4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G1": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G2": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G3": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G4": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_G5": {
                    "storageAccountType": "Standard_LRS"
               },
               "Standard_DS1": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS3": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS4": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS11": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS12": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS13": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS14": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS1_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS2_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS3_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS4_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS5_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS11_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS12_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS13_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS14_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_DS15_v2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS1": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS2": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS3": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS4": {
                    "storageAccountType": "Premium_LRS"
               },
               "Standard_GS5": {
                    "storageAccountType": "Premium_LRS"
               }
          },                   
          "commandArgs": "[concat('-m ', parameters('applicationProtocols'), ' -d ', parameters('solutionDeploymentName'), ' -n ', parameters('applicationAddress'), ' -j 880 -k 8445 -h ', parameters('applicationPort'), ' -s ', parameters('applicationSecurePort'), ' -t ', toLower(variables('appType')), ' -l ', toLower(parameters('blockingLevel')), ' -a ', parameters('customPolicy'), ' -c ', parameters('sslCert'), ' -r ', parameters('sslPswd'), ' -o ', parameters('applicationServiceFqdn'), ' -u ', parameters('adminUsername'))]"
     },
     "resources": [
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/publicIPAddresses",
               "name": "[parameters('publicIpName')]",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "PublicIPAddress"
               },
               "properties": {
                    "idleTimeoutInMinutes": 30,
                    "publicIPAllocationMethod": "Static",
                    "dnsSettings": {
                         "domainNameLabel": "[parameters('dnsLabel')]"
                    }
               }
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/virtualNetworks",
               "name": "[variables('virtualNetworkName')]",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "VirtualNetwork"
               },
               "properties": {
                    "addressSpace": {
                         "addressPrefixes": [
                              "[variables('vnetAddressPrefix')]"
                         ]
                    },
                    "subnets": [
                         {
                              "name": "[variables('subnetName')]",
                              "properties": {
                                   "addressPrefix": "[variables('subnetPrefix')]"
                              }
                         }
                    ]
               }
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/networkInterfaces",
               "name": "[concat(variables('nicNamePrefix'),copyindex())]",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "NetworkInterface"
               },
               "dependsOn": [
                    "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/guimgt',copyindex())]",
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/sshmgt',copyindex())]",
                    "[concat('Microsoft.Network/networkSecurityGroups/', parameters('dnsLabel'),'-nsg')]"
               ],
               "copy": {
                    "count": "[parameters('numberOfInstances')]",
                    "name": "niccopy"
               },
               "properties": {
                    "networkSecurityGroup": {
                         "id": "[variables('nsgID')]"
                    },
                    "ipConfigurations": [
                         {
                              "name": "ipconfig1",
                              "properties": {
                                   "privateIPAllocationMethod": "Static",
                                   "privateIPAddress": "[concat(variables('ipAddress'),copyindex(4))]",
                                   "subnet": {
                                        "id": "[variables('subnetRef')]"
                                   },
                                   "loadBalancerBackendAddressPools": [
                                        {
                                             "id": "[concat(variables('lbID'), '/backendAddressPools/', 'loadBalancerBackEnd')]"
                                        }
                                   ],
                                   "loadBalancerInboundNatRules": [
                                        {
                                             "id": "[concat(variables('lbID'), '/inboundNatRules/', 'guimgt',copyIndex())]"
                                        },
                                        {
                                             "id": "[concat(variables('lbID'), '/inboundNatRules/', 'sshmgt',copyIndex())]"
                                        }
                                   ]
                              }
                         }
                    ]
               }
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/networkSecurityGroups",
               "name": "[concat(parameters('dnsLabel'), '-nsg')]",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "NetworkSecurityGroup"
               },
               "properties": {
                    "securityRules": [
                         {
                              "name": "mgmt_allow_443",
                              "properties": {
                                   "description": "",
                                   "priority": 101,
                                   "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                                   "sourcePortRange": "*",
                                   "destinationAddressPrefix": "*",
                                   "destinationPortRange": "443",
                                   "protocol": "TCP",
                                   "direction": "Inbound",
                                   "access": "Allow"
                              }
                         },
                         {
                              "name": "ssh_allow_22",
                              "properties": {
                                   "description": "",
                                   "priority": 102,
                                   "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                                   "sourcePortRange": "*",
                                   "destinationAddressPrefix": "*",
                                   "destinationPortRange": "22",
                                   "protocol": "TCP",
                                   "direction": "Inbound",
                                   "access": "Allow"
                              }
                         },
                         {
                              "name": "app_allow_880",
                              "properties": {
                                   "description": "",
                                   "priority": 103,
                                   "sourceAddressPrefix": "*",
                                   "sourcePortRange": "*",
                                   "destinationAddressPrefix": "*",
                                   "destinationPortRange": "880",
                                   "protocol": "TCP",
                                   "direction": "Inbound",
                                   "access": "Allow"
                              }
                         },
                         {
                              "name": "app_allow_8445",
                              "properties": {
                                   "description": "",
                                   "priority": 104,
                                   "sourceAddressPrefix": "*",
                                   "sourcePortRange": "*",
                                   "destinationAddressPrefix": "*",
                                   "destinationPortRange": "8445",
                                   "protocol": "TCP",
                                   "direction": "Inbound",
                                   "access": "Allow"
                              }
                         }
                    ]
               }
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "dependsOn": [
                    "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpName'))]"
               ],
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "LoadBalancer"
               },
               "name": "[variables('loadBalancerName')]",
               "properties": {
                    "frontendIPConfigurations": [
                         {
                              "name": "loadBalancerFrontEnd",
                              "properties": {
                                   "publicIPAddress": {
                                        "id": "[variables('publicIPID')]"
                                   }
                              }
                         }
                    ],
                    "backendAddressPools": [
                         {
                              "name": "loadBalancerBackEnd"
                         }
                    ],
                    "loadBalancingRules": [
                         {
                              "Name": "http-880",
                              "properties": {
                                   "frontendIPConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                                   },
                                   "backendAddressPool": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
                                   },
                                   "probe": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/tcp-880')]"
                                   },
                                   "protocol": "Tcp",
                                   "frontendPort": "[parameters('applicationPort')]",
                                   "backendPort": 880,
                                   "idleTimeoutInMinutes": 15
                              }
                         },
                         {
                              "Name": "http-8445",
                              "properties": {
                                   "frontendIPConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                                   },
                                   "backendAddressPool": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
                                   },
                                   "probe": {
                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/tcp-8445')]"
                                   },
                                   "protocol": "Tcp",
                                   "frontendPort": "[parameters('applicationSecurePort')]",
                                   "backendPort": 8445,
                                   "idleTimeoutInMinutes": 15
                              }
                         }
                    ],
                    "probes": [
                         {
                              "properties": {
                                   "protocol": "Tcp",
                                   "port": 880,
                                   "intervalInSeconds": 15,
                                   "numberOfProbes": 2
                              },
                              "name": "tcp-880"
                         },
                         {
                              "properties": {
                                   "protocol": "Tcp",
                                   "port": 8445,
                                   "intervalInSeconds": 15,
                                   "numberOfProbes": 2
                              },
                              "name": "tcp-8445"
                         }
                    ]
               },
               "type": "Microsoft.Network/loadBalancers"
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/loadBalancers/inboundNatRules",
               "name": "[concat(variables('loadBalancerName'),'/guimgt', copyIndex())]",
               "location": "[parameters('location')]",
               "copy": {
                    "name": "lbNatLoop",
                    "count": "[parameters('numberOfInstances')]"
               },
               "dependsOn": [
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
               ],
               "properties": {
                    "frontendIPConfiguration": {
                         "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": "[copyIndex(8443)]",
                    "backendPort": 443,
                    "enableFloatingIP": false
               }
          },
          {
               "apiVersion": "[variables('apiVersionNetwork')]",
               "type": "Microsoft.Network/loadBalancers/inboundNatRules",
               "name": "[concat(variables('loadBalancerName'),'/sshmgt', copyIndex())]",
               "location": "[parameters('location')]",
               "copy": {
                    "name": "lbNatLoop",
                    "count": "[parameters('numberOfInstances')]"
               },
               "dependsOn": [
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
               ],
               "properties": {
                    "frontendIPConfiguration": {
                         "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": "[copyIndex(8022)]",
                    "backendPort": 22,
                    "enableFloatingIP": false
               }
          },
          {
               "apiVersion": "[variables('apiVersionCompute')]",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "AvailabilitySet"
               },
               "name": "[variables('availabilitySetName')]",
               "type": "Microsoft.Compute/availabilitySets"
          },
          {
               "name": "[variables('diagStorageAccountName')]",
               "type": "Microsoft.Storage/storageAccounts",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "StorageAccount"
               },
               "apiVersion": "[variables('apiVersionStorage')]",
               "properties": {
                    "accountType": "Standard_LRS" 
               }
          },
          {
               "name": "[variables('newStorageAccountName')]",
               "type": "Microsoft.Storage/storageAccounts",
               "location": "[parameters('location')]",
               "tags": {
                    "displayName": "StorageAccount"
               },
               "apiVersion": "[variables('apiVersionStorage')]",
               "properties": {
                    "accountType": "[variables('instanceTypeMap')[parameters('instanceType')].storageAccountType]" 
               }
          },
          {
               "apiVersion": "[variables('apiVersionTemplate')]",
               "name": "linkedTemplate",
               "type": "Microsoft.Resources/deployments",
               "dependsOn": [
                    "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                    "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                    "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                    "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                    "[concat('Microsoft.Storage/storageAccounts/', variables('diagStorageAccountName'))]"
               ],
               "properties": {
                    "mode": "incremental",
                    "templateLink": {
                         "uri": "[variables('bigipTemplateLink')]",
                         "contentVersion": "1.0.0.0"
                    },
                    "parameters": {
                         "baseUrl": { "value": "[parameters('baseUrl')]" },
                         "location": { "value": "[parameters('location')]" },
                         "imageName": { "value": "[variables('imageName')]" },
                         "instanceType": { "value": "[parameters('instanceType')]" },
                         "adminUsername": { "value": "[parameters('adminUsername')]" },
                         "adminPassword": { "value": "[parameters('adminPassword')]" },
                         "dnsLabel": { "value": "[parameters('dnsLabel')]" },
                         "commandArgs": { "value": "[variables('commandArgs')]" }
                    }
               }
          }
     ],
     "outputs": {
          "GUI-URL": {
               "type": "string",
               "value": "[concat('https://',reference(variables('publicIPID')).dnsSettings.fqdn,':8443')]"
          },
          "SSH-URL": {
               "type": "string",
               "value": "[concat(reference(variables('publicIPID')).dnsSettings.fqdn,' ',8022)]"
          }
     }
}